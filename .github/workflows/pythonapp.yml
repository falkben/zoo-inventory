name: Build and Test

on: [push]

env:
  SECRET_KEY: secret_key_github_actions_12345_github_action_secret_key
  SECURE_SSL_REDIRECT: 0
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: zootable
          POSTGRES_PASSWORD: zootable
          POSTGRES_DB: zootable
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --mount type=tmpfs,destination=/var/lib/postgresql/data --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Install library
        run: pip install -e .

      - name: Run migrations
        run: python manage.py migrate --noinput

      - name: Test with pytest
        run: |
          pytest --cov=zoo_checks --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml
          fail_ci_if_error: false
          
      - name: Ensure that we can build the image
        run: |
          docker build --pull --tag zootable .

      - name: Get flyctl
        if: github.ref == 'refs/heads/main'
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to fly
        if: github.ref == 'refs/heads/main'
        run: flyctl deploy --remote-only
